@model CustomerManagement.Web.Models.DetailViewModel;
@using CustomerManagement.Common.Helpers;
@using CustomerManagement.Common.DTOs;

@{
    ViewData["Title"] = "Phase 1 - Performance Objection";
    //var appraisalTaskDto = Model.AppraisalTaskDto;
    //var appraisalTaskDto = (AppraisalTaskDto)TempData["AppraisalTaskDto"]; var dto = JsonConvert.DeserializeObject<AppraisalTaskDto>((string)TempData["AppraisalTaskDto"]);
}
<div class="panel panel-default">
    <div class="panel-heading" style="background:#c4d6e9;"><h3><h2>@ViewData["Title"]</h2></h3></div>
    <div class="panel-body">
        <div class="panel with-nav-tabs panel-info">
            <div class="panel-heading">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#appraisalDetails" type="button" role="tab">Appraisal Details</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" data-bs-toggle="tab" data-bs-target="#appraisalHistory" type="button" role="tab">Appraisal History</button>
                    </li>
                </ul>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="appraisalDetails" role="tabpanel">
                        <div class="tab-details-en">
                            @await Html.PartialAsync("Appraisals/_AppraisalDetailsEn", Model.AppraisalTaskDto)
                            <div class="li-btn-submit">
                                @if (Convert.ToInt32(ViewBag.M_RoleID) == (int)CommonAppraisal.Role.Employee
                                && (Model.AppraisalTaskDto.ActionId == (int)CommonAppraisal.UserAction.Phase_1_Emp_New))
                                {
                                    <ul class="nav navbar-nav" id="liButton">
                                        <li>
                                            <button type="button" id="idFormPhase1NewEn" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modelFormPhase1NewEn">
                                                Submit - Performance Objection
                                            </button>
                                            @await Html.PartialAsync("Appraisals/_FormPhase1New", Model.AppraisalTaskDto, new ViewDataDictionary(ViewData) { {
                                        "Form_Title", "Performance Objection - Form" }, { "Form_Action", "Phase1EmpToMngAssign" }, { "Form_Btn", "Submit - Performance Objection" }, { "Form_RoleID", ViewBag.M_RoleID } })
                                        </li>
                                    </ul>
                                }
                                else if (Convert.ToInt32(ViewBag.M_RoleID) == (int)CommonAppraisal.Role.Manager
                                && (Model.AppraisalTaskDto.ActionId == (int)CommonAppraisal.UserAction.Phase_1_Mng_FromEmp_New))
                                {
                                    <ul class="nav navbar-nav" id="liButton">
                                        <li>
                                            <button type="button" id="idFormPhase1RejectEn" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modelFormPhase1RejectEn">
                                                Reject - Performance Objection
                                            </button>
                                            @await Html.PartialAsync("Appraisals/_FormPhase1Reject", Model.AppraisalTaskDto, new ViewDataDictionary(ViewData) { {
                                        "Form_Title", "Performance Objection - Reject" }, { "Form_Action", "Phase1MngToEmpReject" }, { "Form_Btn", "Reject - Performance Objection" }, { "Form_RoleID", ViewBag.M_RoleID } })
                                        </li>
                                        <li>
                                            <button type="button" id="idFormPhase1ApproveEn" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modelFormPhase1ApproveEn">
                                                Approve - Performance Objection
                                            </button>
                                            @await Html.PartialAsync("Appraisals/_FormPhase1Approve", Model.AppraisalTaskDto, new ViewDataDictionary(ViewData) { {
                                        "Form_Title", "Performance Objection - Approve" }, { "Form_Action", "Phase1MngToEmpApprove" }, { "Form_Btn", "Approve - Performance Objection" }, { "Form_RoleID", ViewBag.M_RoleID } })
                                        </li>
                                    </ul>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="appraisalHistory" role="tabpanel">
                        @await Html.PartialAsync("Appraisals/_HistoryEn", Model)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}




